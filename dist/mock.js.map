{"version":3,"file":"mock.js","sources":["../src/random/basic.js","../src/random/date.js","../src/random/helper.js","../src/random/image.js","../src/random/color_dict.js","../src/random/color.js","../src/random/index.js","../src/generator.js","../src/mock.js"],"sourcesContent":["/**\n * 字符集模板\n */\nconst poolsChar = {\n  lower: 'abcdefghijklmnopqrstuvwxyz',\n  upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  number: '0123456789',\n  symbol: '!@#$%^&*()[]',\n};\npoolsChar.alpha = poolsChar.lower + poolsChar.upper;\npoolsChar.undefined = poolsChar.lower + poolsChar.upper + poolsChar.number + poolsChar.symbol;\n\n/**\n * 根据 min-max 返回随机值\n *\n * @export\n * @param {any} min\n * @param {any} max\n * @returns\n */\nexport function integer(min, max) {\n  min = min !== undefined ? parseInt(min, 10) : -9007199254740992;\n  max = max !== undefined ? parseInt(max, 10) : 9007199254740992; // 2^53\n  return Math.round(Math.random() * (max - min)) + min;\n}\n// 别名\nexport const int = integer;\n\n/**\n * 根据 1/min-max 的概率返回 cur 的值\n *\n * @export\n * @param {any} min\n * @param {any} max\n * @param {any} cur\n * @returns\n */\nexport function boolean(min, max, cur) {\n  if (min === undefined) {\n    return Math.random() >= 0.5;\n  }\n  const denom = max ? integer(min, max) : parseInt(min, 10);\n  return Math.random() * denom < 1 ? Boolean(cur) : !cur;\n}\n// 别名\nexport const bool = boolean;\n\n// 返回一个随机的浮点数。\nexport function float(min, max, dmin, dmax) {\n  dmax = dmax || 17;\n  dmax = Math.max(Math.min(dmax, 17), 0);\n  dmin = dmin || 0;\n  dmin = Math.max(Math.min(dmin, 17), 0);\n\n  const dcount = integer(dmin, dmax);\n  const ret = `${max ? integer(min, max) : min}.${string('number', dcount - 1)}${character('123456789')}`;\n  return parseFloat(ret, 10);\n}\n\n/**\n * 返回一个随机字符\n *\n * @export\n * @param {any} pool\n * @returns\n */\nexport function character(pool) {\n  pool = String(pool);\n  pool = poolsChar[pool.toLowerCase()] || pool;\n  return pool.charAt(integer(0, pool.length - 1));\n}\nexport const char = character;\n\n/**\n * 返回一个随机字符串\n *\n * @export\n * @param {any} pool\n * @param {any} min\n * @param {any} max\n * @returns\n */\nexport function string(pool, min, max) {\n  let count = 0;\n\n  if (max !== undefined) {\n    count = integer(min, max);\n  } else if (min !== undefined) {\n    count = +min;\n  } else if (typeof pool === 'number') {\n    count = parseInt(pool, 10);\n    pool = undefined;\n  } else {\n    count = integer(3, 7);\n  }\n\n  let text = '';\n  for (let i = 0; i < count; i++) {\n    text += character(pool);\n  }\n\n  return text;\n}\nexport const str = string;\n\n/**\n * 返回一个整型数组\n *\n * @export\n * @param {number} start 开始\n * @param {number} stop  结束\n * @param {number} step  步长\n * @returns\n */\nexport function range(start, stop, step) {\n  if (!step) {\n    step = 1;\n  }\n\n  if (!stop) {\n    stop = start || 0;\n    start = 0;\n  }\n\n  start = +start; // 开始\n  stop = +stop; // 结束\n  step = +step; // 步长\n\n  const arr = [];\n\n  for (let i = start; i < stop; i += step) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n","/**\n * 格式日期，网上抄的，eslit fix 了下而已。\n *\n * @param {string} fmt 格式化字符串\n * @param {Date} dt 日期对象\n * @returns\n */\nfunction dateFormat(fmt, dt) {\n  const o = {\n    'M+': dt.getMonth() + 1, // 月份\n    'd+': dt.getDate(), // 日\n    'h+': dt.getHours(), // 小时\n    'm+': dt.getMinutes(), // 分\n    's+': dt.getSeconds(), // 秒\n    'q+': Math.floor((dt.getMonth() + 3) / 3), // 季度\n    S: dt.getMilliseconds(), // 毫秒\n  };\n\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, `${dt.getFullYear()}`.substr(4 - RegExp.$1.length));\n  }\n\n  /* eslint no-restricted-syntax:0 */\n  for (const k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      const rep = RegExp.$1.length === 1 ? o[k] : `00${o[k]}`.substr(`${o[k]}`.length);\n      fmt = fmt.replace(RegExp.$1, rep);\n    }\n  }\n\n  return fmt;\n}\n\n/**\n * 随机生成 [1970-01-01, 10年后] 区间的日期对象\n *\n * @returns\n */\nfunction randomDate() {\n  const min = new Date(0); // 1970-01-01\n  const max = new Date();\n  max.setFullYear(max.getFullYear() + 10); // 10年后\n  return new Date(Math.random() * (max.getTime() - min.getTime()));\n}\n\n/**\n * 日期部分格式化\n *\n * @export\n * @param {string} format\n * @returns\n */\nexport function date(format) {\n  return dateFormat(format || 'yyyy-MM-dd', randomDate());\n}\n\n/**\n * 时分秒部分格式化\n *\n * @export\n * @param {string} format\n * @returns\n */\nexport function time(format) {\n  return dateFormat(format || 'hh:mm:ss', randomDate());\n}\n\n/**\n * 完整时间部分格式化\n *\n * @export\n * @param {string} format\n * @returns\n */\nexport function datetime(format) {\n  return dateFormat(format || 'yyyy-MM-dd hh:mm:ss', randomDate());\n}\n\n/**\n * 当前时间格式化\n *\n * @export\n * @param {string} format\n * @returns\n */\nexport function now(format) {\n  return dateFormat(format || 'yyyy-MM-dd hh:mm:ss', new Date());\n}\n","import { integer } from './basic';\n\n/**\n * 把字符串的第一个字母转换为大写\n *\n * @export\n * @param {string} word\n * @returns\n */\nexport function capitalize(word) {\n  word = String(word);\n  return word.charAt(0).toUpperCase() + word.substr(1);\n}\n\n/**\n * 把字符串转换为大写\n *\n * @export\n * @param {string} str\n * @returns\n */\nexport function upper(str) {\n  return String(str).toUpperCase();\n}\n\n/**\n * 把字符串转换为小写\n *\n * @export\n * @param {string} str\n * @returns\n */\nexport function lower(str) {\n  return String(str).toLowerCase();\n}\n\n/**\n * 打乱数组中元素的顺序\n * @param {array} arr\n * @see https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n */\nexport function shuffle(arr, min, max) {\n  arr = arr.slice(0);\n  for (let i = arr.length; i; i--) {\n    const j = Math.floor(Math.random() * i);\n    [arr[i - 1], arr[j]] = [arr[j], arr[i - 1]];\n  }\n\n  switch (arguments.length) {\n    case 2:\n      max = min;\n    /* falls through */\n    case 3:\n      min = parseInt(min, 10);\n      max = parseInt(max, 10);\n      return arr.slice(0, integer(min, max));\n    default:\n      return arr;\n  }\n}\n\n/**\n * 从数组中随机选取一个元素，并返回\n *\n * @export\n * @param {array} arr\n * @param {number} min\n * @param {number} max\n */\nexport function pick(arr, min, max) {\n  if (!(arr instanceof Array)) {\n    /* eslint prefer-rest-params:0 */\n    arr = [].slice.call(arguments);\n    min = 1;\n    max = 1;\n  } else {\n    // pick( [ item1, item2 ... ] )\n    if (min === undefined) min = 1;\n    // pick( [ item1, item2 ... ], count )\n    if (max === undefined) max = min;\n  }\n\n  if (min === 1 && max === 1) {\n    return arr[integer(0, arr.length - 1)];\n  }\n\n  return shuffle(arr, min, max);\n}\n","import { pick } from './helper';\n\n// 七牛占位图 host，支持 https\nlet host = 'dn-placeholder.qbox.me';\n\n// 常见的广告宽高\nconst adSize = [\n  '300x250',\n  '250x250',\n  '240x400',\n  '336x280',\n  '180x150',\n  '720x300',\n  '468x60',\n  '234x60',\n  '88x31',\n  '120x90',\n  '120x60',\n  '120x240',\n  '125x125',\n  '728x90',\n  '160x600',\n  '120x600',\n  '300x600',\n];\n\n// 常见的屏幕宽高 (暂时没用)\n// const screenSize = [\n//   '320x200',\n//   '320x240',\n//   '640x480',\n//   '800x480',\n//   '800x480',\n//   '1024x600',\n//   '1024x768',\n//   '1280x800',\n//   '1440x900',\n//   '1920x1200',\n//   '2560x1600',\n// ];\n\n// 常见的视频宽高 (暂时没用)\n// const videoSize = ['720x480', '768x576', '1280x720', '1920x1080'];\n\n/**\n * 设置 host 用于自定义占位图\n *\n * @export\n * @param {any} newHost\n */\nexport function setImageHost(newHost) {\n  host = newHost;\n}\n\n/**\n * 生成一个随机的占位图\n *\n * @export\n * @param {string} size\n * @param {string} background\n * @param {string} foreground\n * @param {string} format\n * @param {string} text\n * @returns\n */\nexport function image(size, background, foreground, format, text) {\n  // Random.image( size, background, foreground, text )\n  if (arguments.length === 4) {\n    text = format;\n    format = undefined;\n  }\n  // Random.image( size, background, text )\n  if (arguments.length === 3) {\n    text = foreground;\n    foreground = undefined;\n  }\n  // Random.image()\n  if (!size) {\n    size = pick(adSize);\n  }\n\n  return `http://${host}/${size}${background ? `/${background}` : ''}${foreground\n    ? `/${foreground}`\n    : ''}${format ? `.${format}` : ''}${text ? `&text=${text}` : ''}`;\n}\n","/**\n * Color 字典数据\n *\n * 字典数据来源 [A nicer color palette for the web](http://clrs.cc/)\n */\nexport default {\n  // name value nicer\n  navy: {\n    value: '#000080',\n    nicer: '#001F3F',\n  },\n  blue: {\n    value: '#0000ff',\n    nicer: '#0074D9',\n  },\n  aqua: {\n    value: '#00ffff',\n    nicer: '#7FDBFF',\n  },\n  teal: {\n    value: '#008080',\n    nicer: '#39CCCC',\n  },\n  olive: {\n    value: '#008000',\n    nicer: '#3D9970',\n  },\n  green: {\n    value: '#008000',\n    nicer: '#2ECC40',\n  },\n  lime: {\n    value: '#00ff00',\n    nicer: '#01FF70',\n  },\n  yellow: {\n    value: '#ffff00',\n    nicer: '#FFDC00',\n  },\n  orange: {\n    value: '#ffa500',\n    nicer: '#FF851B',\n  },\n  red: {\n    value: '#ff0000',\n    nicer: '#FF4136',\n  },\n  maroon: {\n    value: '#800000',\n    nicer: '#85144B',\n  },\n  fuchsia: {\n    value: '#ff00ff',\n    nicer: '#F012BE',\n  },\n  purple: {\n    value: '#800080',\n    nicer: '#B10DC9',\n  },\n  silver: {\n    value: '#c0c0c0',\n    nicer: '#DDDDDD',\n  },\n  gray: {\n    value: '#808080',\n    nicer: '#AAAAAA',\n  },\n  black: {\n    value: '#000000',\n    nicer: '#111111',\n  },\n  white: {\n    value: '#FFFFFF',\n    nicer: '#FFFFFF',\n  },\n};\n","import DICT from './color_dict';\n\nconst goldenRatio = 0.618033988749895;\nlet hue = Math.random();\n\n/**\n * 随机生成一个有吸引力的颜色\n *\n * @param {any} saturation\n * @param {any} value\n * @returns\n *\n * @see http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n * @see https://github.com/devongovett/color-generator/blob/master/index.js\n */\nfunction goldenRatioColor(saturation, value) {\n  hue += goldenRatio;\n  hue %= 1;\n\n  if (typeof saturation !== 'number') {\n    saturation = 0.5;\n  }\n\n  if (typeof value !== 'number') {\n    value = 0.95;\n  }\n\n  return [hue * 360, saturation * 100, value * 100];\n}\n\n\n/* eslint-disable */\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n    s = hsv[1] / 100,\n    v = hsv[2] / 100,\n    sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60\n  var s = hsv[1] / 100\n  var v = hsv[2] / 100\n  var hi = Math.floor(h) % 6\n\n  var f = h - Math.floor(h)\n  var p = 255 * v * (1 - s)\n  var q = 255 * v * (1 - (s * f))\n  var t = 255 * v * (1 - (s * (1 - f)))\n\n  v = 255 * v\n\n  switch (hi) {\n    case 0:\n      return [v, t, p]\n    case 1:\n      return [q, v, p]\n    case 2:\n      return [p, v, t]\n    case 3:\n      return [p, q, v]\n    case 4:\n      return [t, p, v]\n    case 5:\n      return [v, p, q]\n  }\n}\n\n/**\n * rgb 转 hex\n *\n * @param {any} r\n * @param {any} g\n * @param {any} b\n * @returns\n *\n */\nfunction rgb2hex(r, g, b) {\n  return ((256 + r << 8 | g) << 8 | b).toString(16).slice(1);\n}\n/* eslint-enable */\n\n/**\n * 随机生成一个颜色，格式为 '#RRGGBB' 或 'RRGGBB'\n *\n * @export\n * @param {bool} symbol\n * @returns\n */\nexport function hex(symbol) {\n  const hsv = goldenRatioColor();\n  const rgbVal = hsv2rgb(hsv);\n  const ret = rgb2hex(rgbVal[0], rgbVal[1], rgbVal[2]);\n  return symbol ? `#${ret}` : ret;\n}\n\n/**\n * rgb颜色 rgb(128,255,255)\n *\n * @export\n * @returns\n */\nexport function rgb() {\n  const hsv = goldenRatioColor();\n  const ret = hsv2rgb(hsv);\n  return `rgb(${parseInt(ret[0], 10)}, ${parseInt(ret[1], 10)}, ${parseInt(ret[2], 10)})`;\n}\n\n/**\n * rgba颜色 rgba(128,255,255,0.3)\n *\n * @export\n * @returns\n */\nexport function rgba() {\n  const hsv = goldenRatioColor();\n  const ret = hsv2rgb(hsv);\n  return `rgba(${parseInt(ret[0], 10)}, ${parseInt(ret[1], 10)}, ${parseInt(ret[2], 10)}, ${Math.random().toFixed(2)})`;\n}\n\n/**\n * hsl颜色 hsl(300,80%,90%)\n *\n * @export\n * @returns\n */\nexport function hsl() {\n  const hsv = goldenRatioColor();\n  const ret = hsv2hsl(hsv);\n  return `hsl(${parseInt(ret[0], 10)}, ${parseInt(ret[1], 10)}, ${parseInt(ret[2], 10)})`;\n}\n\n/**\n * 随机生成一个有吸引力的颜色，格式为 '#RRGGBB'\n *\n * @export\n * @param {any} name\n * @returns\n */\nexport function color(name) {\n  if (name || DICT[name]) {\n    return DICT[name].nicer;\n  }\n  return hex(true);\n}\n","import * as basic from './basic';\nimport * as date from './date';\nimport * as image from './image';\nimport * as color from './color';\n\nimport * as helper from './helper';\n\nexport default {\n  ...basic,\n  ...date,\n  ...image,\n  ...color,\n\n  ...helper,\n};\n","import Random from './random/index';\n\n/* eslint no-confusing-arrow:0 */\n/* eslint no-underscore-dangle:0 */\n\n/**\n * Object#toString\n *\n * @function toString\n */\nconst toString = Object.prototype.toString;\n\n/**\n * 获取数据类型\n *\n * @param {any} any\n * @returns {string}\n */\nfunction type(any) {\n  return toString.call(any).slice(8, -1).toLowerCase();\n}\n\n/**\n * 匹配键名处理\n *\n * @param {any} key\n * @param {any} re\n * @returns\n */\nfunction match(key, re) {\n  if (type(key) !== 'string') {\n    return null;\n  }\n  return key.match(re);\n}\n\n// 处理根据\nconst processors = {\n  // 对象处理\n  object(tpl, key, opts) {\n    // 'name|count': object\n    // 'name|min-max': object\n    const ret = {};\n    const keys = Object.keys(tpl);\n    const length = keys.length;\n    let count = length;\n    const m = match(key, /\\|(\\d+)(?:-(\\d+))?/);\n\n    if (m) {\n      if (m[2]) {\n        count = Random.int(m[1], m[2]);\n      } else {\n        count = +m[1];\n      }\n    }\n\n    opts.parentTpl = tpl; // 带上当前对象\n    opts.parent = ret; // 当前解析后的对象\n\n    if (count >= length) {\n      // 函数放末尾处理 'name': function\n      keys.sort(k => type(k) === 'function' ? 1 : 0);\n      // 处理全部\n      keys.forEach((it) => {\n        ret[it.replace(/\\|.+/, '')] = generator(tpl[it], it, opts);\n      });\n    } else {\n      // 随机抽取 (简单洗牌)\n      keys.sort(() => (Math.random() < 0.5 ? -1 : 1)).slice(0, count).forEach((it) => {\n        ret[it.replace(/\\|.+/, '')] = generator(tpl[it], it, opts);\n      });\n    }\n\n    return ret;\n  },\n\n  // 数组处理\n  array(tpl, key, opts) {\n    // 'name|1': array\n    // 'name|+1': array\n    // 'name|min-max': array\n    // 'name|count': array\n    let result = [];\n    const length = tpl.length;\n\n    // 处理空数组\n    if (length === 0) {\n      return result;\n    }\n\n    let count = 0;\n    const m = match(key, /\\|(\\+)?(\\d+)(?:-(\\d+))?/);\n\n    if (m) {\n      if (m[2] === '1' && m[3] === undefined) {\n        if (m[1] === '+') {\n          // 'name|+1': array\n          let idx = tpl._idx || 0;\n          if (idx >= length) {\n            idx = 0;\n          }\n          result = generator(tpl[idx], idx, opts);\n          tpl._idx = idx + 1;\n        } else {\n          // 'name|1': array\n          const idx = Random.int(0, length - 1);\n          result = generator(tpl[idx], idx, opts);\n        }\n        return result;\n      } else if (m[3]) {\n        count = Random.int(m[2], m[3]);\n      } else {\n        count = +m[2];\n      }\n    }\n\n    // 重复 count 次\n    for (let i = 0; i < count; i += 1) {\n      tpl.forEach(it => result.push(generator(it, i, opts)));\n    }\n\n    return result;\n  },\n\n  // 数字处理\n  number(tpl, key, opts) {\n    // 'name|+number': number\n    // 'name|min-max': number\n    // 'name|min-max.dmin-dmax': number\n    // 'name|number.dmin-dmax': number\n    const m = match(key, /\\|([+-]?\\d+)(?:-([-]?\\d+))?(?:\\.(\\d+)(?:-(\\d+))?)?/);\n\n    if (!m) {\n      return tpl; // 没有匹配到\n    }\n\n    // 'name|+number': number\n    if (m[1][0] === '+') {\n      opts.parentTpl[key] += parseInt(m[1], 10); // 父节点数据累加\n      return tpl;\n    }\n\n    // 'name|min-max.dmin-dmax': number\n    if (m[3] || m[4]) {\n      return Random.float(m[1], m[2], m[3], m[4]);\n    }\n\n    // 'name|min-max': number\n    if (m[2]) {\n      return Random.int(m[1], m[2]);\n    }\n\n    return tpl;\n  },\n\n  // 字符串处理\n  string(tpl, key) {\n    // 'name|min-max': string  重复 string 字符串 min-max 次\n    // 'name|count': string  重复 string 字符串 count次\n    let count = 0; // 重复次数\n    const m = match(key, /\\|(\\d+)(?:-(\\d+))?/); // 匹配key\n\n    if (m) {\n      if (m[2]) {\n        // 'name|min-max': string\n        count = Random.int(m[1], m[2]);\n      } else {\n        // 'name|count': string\n        count = +m[1];\n      }\n    }\n\n    let str = tpl;\n\n    // 'name|min-max': '' or 'name|count': ''\n    if (tpl === '') {\n      return Random.string('alpha', count || undefined);\n    }\n\n    if (count) {\n      str = Array(count + 1).join(tpl); // 重复N次\n    }\n\n    // TODO: 占位符处理\n\n    return str;\n  },\n\n  // 布尔值处理\n  boolean(tpl, key) {\n    // 'name|min-max': boolean  1/min-max 的概率返回 boolean 的值\n    // 'name|count': boolean  1/count 概率返回 boolean 的值\n    const m = match(key, /\\|(\\d+)(?:-(\\d+))?/); // 匹配key\n    return m ? Random.bool(m[1], m[2], tpl) : tpl;\n  },\n\n  // 函数处理 (异步处理，为了获取完整 root 对象)\n  function: (fn, key, opts) => {\n    // 'name': function\n    opts.callbacks.push({ fn, key, parent: opts.parent });\n    return '[Waiting for callback processing...]';\n  },\n};\n\nexport { Random };\n\n/**\n * 数据生成器入口\n *\n * @export\n * @param {any} data mock 模板数据\n * @param {string} key 当前数据的 key\n * @param {object} opts 公用数据\n * @returns {any}\n */\nexport default function generator(data, key, opts) {\n  const processor = processors[type(data)];\n  return processor ? processor(data, key, opts) : data;\n}\n","import generator, { Random } from './generator';\n\n// 导出工具对象\nexport { Random };\n\n// 生成器包装\nexport const Mock = {\n  mock(any) {\n    const opts = { rootTpl: any, callbacks: [] };\n    const root = generator(any, '', opts);\n\n    // 处理函数回调\n    opts.callbacks.forEach((opt) => {\n      // this 是当前父节点对象，root 是跟对象\n      opt.parent[opt.key] = opt.fn.call(opt.parent, root);\n    });\n\n    return root;\n  },\n};\n\nexport default Mock;\n"],"names":["poolsChar","alpha","lower","upper","undefined","number","symbol","integer","min","max","parseInt","Math","round","random","int","boolean","cur","denom","Boolean","bool","float","dmin","dmax","dcount","ret","string","character","parseFloat","pool","String","toLowerCase","charAt","length","char","count","text","i","str","range","start","stop","step","arr","push","dateFormat","fmt","dt","o","getMonth","getDate","getHours","getMinutes","getSeconds","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","k","rep","randomDate","Date","setFullYear","getTime","date","format","time","datetime","now","capitalize","word","toUpperCase","shuffle","slice","j","arguments","pick","Array","call","host","adSize","setImageHost","newHost","image","size","background","foreground","goldenRatio","hue","goldenRatioColor","saturation","value","hsv2hsl","hsv","h","s","v","sl","l","hsv2rgb","hi","f","p","q","t","rgb2hex","r","g","b","toString","hex","rgbVal","rgb","rgba","toFixed","hsl","color","name","DICT","nicer","basic","helper","Object","prototype","type","any","match","key","re","processors","tpl","opts","keys","m","Random","parentTpl","parent","sort","forEach","it","generator","result","idx","_idx","join","fn","callbacks","data","processor","Mock","rootTpl","root","opt"],"mappings":"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"}